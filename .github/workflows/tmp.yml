# TODO: remove me once before merging
name: Release

on:
  push:
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: ubuntu-latest
            os: linux
            cli_targets: "x86_64-unknown-linux-gnu aarch64-unknown-linux-gnu x86_64-unknown-linux-musl aarch64-unknown-linux-musl"
            gui_targets: "x86_64-unknown-linux-gnu"

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          cache-directories: |
            ~/.cargo/bin

      - name: Install targets
        shell: bash
        run: |
          for target in ${{ matrix.cli_targets }}; do
            rustup target add $target
          done

      - name: Install Linux dependencies
        if: matrix.os == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gcc-aarch64-linux-gnu \
            musl-tools \
            patchelf

      - name: Build CLI binaries
        shell: bash
        run: |
          for target in ${{ matrix.cli_targets }}; do
            echo "Building CLI for $target"

            # Set linker for aarch64 cross-compilation
            if [[ "$target" == "aarch64-unknown-linux-gnu" ]]; then
              export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc
            elif [[ "$target" == "aarch64-unknown-linux-musl" ]]; then
              export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_MUSL_LINKER=aarch64-linux-gnu-gcc
            fi

            cargo build -p tidewave-cli --release --target $target
          done

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: tidewave-cli
          path: target/*/release/tidewave
          retention-days: 7
